buildscript {
    repositories {
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath group: 'org.junit.platform', name: 'junit-platform-gradle-plugin', version: junit_platform_gradle_plugin_version
    }
}

apply plugin: 'org.junit.platform.gradle.plugin'

junitPlatform {
    filters {
        engines {
            include 'spek'
        }
    }
}

dependencies {
    compile group: 'com.google.code.gson', name: 'gson', version: gson_version
    compile group: 'io.github.microutils', name: 'kotlin-logging', version: kotlin_logging_version

    runtime group: 'org.slf4j', name: 'slf4j-simple', version: slf4j_version

    testCompile group: 'org.jetbrains.kotlin', name: 'kotlin-test', version: kotlin_version
    testCompile group: 'org.jetbrains.kotlin', name: 'kotlin-reflect', version: kotlin_version
    testCompile("org.jetbrains.spek:spek-api:$spek_version") {
        exclude group: 'org.jetbrains.kotlin'
    }
    testRuntime("org.jetbrains.spek:spek-junit-platform-engine:$spek_version") {
        exclude group: 'org.jetbrains.kotlin'
    }
    testCompile group: 'org.hamcrest', name: 'hamcrest-library', version: hamcrest_version
    testCompile group: 'io.mockk', name: 'mockk', version: mokk_version
}

task jarTest(type: Jar, dependsOn: testClasses) {
    from sourceSets.test.output
    classifier = 'test'
}

configurations {
    testOutput
}


artifacts {
    testOutput jarTest
}

jacocoTestReport {
    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it,
                    exclude: ['**/model/**'])
        })
    }
}
